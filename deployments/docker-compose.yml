version: "3"

services:
  app:
    build:
      context: .
      dockerfile: deployments/Dockerfile
    env_file:
      - .env
    ports:
      - "${APP_PORT}:8000"
    volumes:
      - .:/app/
    depends_on:
      db:
        condition: service_healthy
    command:
      - /bin/bash
      - -c
      - |
          cd src
          python manage.py collectstatic
          python manage.py migrate
          python manage.py loaddata ../seeds/sample.json
          python manage.py runserver 0.0.0.0:8000

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data/pgdata
    ports:
      - "${HOST_DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER}'" ]
      interval: 3s
      timeout: 3s
      retries: 5
    command: [ "postgres", "-c", "log_statement=all" ]
